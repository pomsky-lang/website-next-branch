<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Reference on</title><link>https://next.pomsky-lang.org/docs/reference/</link><description>Recent content in Reference on</description><generator>Hugo -- gohugo.io</generator><language>en-US</language><lastBuildDate>Tue, 17 May 2022 13:55:00 +0000</lastBuildDate><atom:link href="https://next.pomsky-lang.org/docs/reference/index.xml" rel="self" type="application/rss+xml"/><item><title>Formal grammar</title><link>https://next.pomsky-lang.org/docs/reference/grammar/</link><pubDate>Tue, 17 May 2022 13:55:00 +0000</pubDate><guid>https://next.pomsky-lang.org/docs/reference/grammar/</guid><description>Summary #This document uses pomsky syntax to describe pomsky&amp;rsquo;s syntax. Here&amp;rsquo;s an incomplete summary, which should be enough to read the grammar:
Variables are declared as let var_name = expression;. This assigns expression to the variable var_name.
Verbatim text is wrapped in double quotes ("") or single quotes ('').
A \* after a rule indicates that it repeats 0 or more times.
A + after a rule indicates that it repeats 1 or more times.</description></item><item><title>Unicode properties</title><link>https://next.pomsky-lang.org/docs/reference/unicode-properties/</link><pubDate>Tue, 17 May 2022 13:55:00 +0000</pubDate><guid>https://next.pomsky-lang.org/docs/reference/unicode-properties/</guid><description>Pomsky supports the following kinds of Unicode properties:
General categories Scripts Blocks Other boolean properties However, not all regex engines support all of them. In particular, blocks and other properties are poorly supported.
Categories #Every Unicode code point is in one of the following General Categories:
Letter Mark Number Punctuation Symbol Separator Other Each of these categories is subdivided into smaller categories. More information on Wikipedia.
In Pomsky, you can match against categories in square brackets:</description></item><item><title>Built-in variables</title><link>https://next.pomsky-lang.org/docs/reference/built-in-variables/</link><pubDate>Sun, 19 Jun 2022 13:50:00 +0000</pubDate><guid>https://next.pomsky-lang.org/docs/reference/built-in-variables/</guid><description>There are currently 6 built-in variables:
Grapheme matches a single extended grapheme cluster. It compiles to the regex \X. Note that this functionality is not available in all regex flavors. G is an alias for Grapheme Codepoint matches a single Unicode code point. It compiles to the regex [\s\S]. C is an alias for Codepoint Start: Matches the start of the string. Equivalent to ^. End: Matches the end of the string.</description></item><item><title>Security</title><link>https://next.pomsky-lang.org/docs/reference/security/</link><pubDate>Sun, 19 Jun 2022 13:55:00 +0000</pubDate><guid>https://next.pomsky-lang.org/docs/reference/security/</guid><description>If you intend to compile or execute pomsky expressions on a web server or other critical infrastructure, follow this advice, so you don&amp;rsquo;t end up vulnerable to attacks.
A billion laughs #The most important advice is to never compile an untrusted pomsky expression, since doing that may make you vulnerable for denial of service attacks. Here&amp;rsquo;s a simple example:
let lol = 'lol'; let lol1 = lol lol lol lol lol lol lol lol lol lol; let lol2 = lol1 lol1 lol1 lol1 lol1 lol1 lol1 lol1 lol1 lol1; let lol3 = lol2 lol2 lol2 lol2 lol2 lol2 lol2 lol2 lol2 lol2; let lol4 = lol3 lol3 lol3 lol3 lol3 lol3 lol3 lol3 lol3 lol3; let lol5 = lol4 lol4 lol4 lol4 lol4 lol4 lol4 lol4 lol4 lol4; let lol6 = lol5 lol5 lol5 lol5 lol5 lol5 lol5 lol5 lol5 lol5; let lol7 = lol6 lol6 lol6 lol6 lol6 lol6 lol6 lol6 lol6 lol6; let lol8 = lol7 lol7 lol7 lol7 lol7 lol7 lol7 lol7 lol7 lol7; let lol9 = lol8 lol8 lol8 lol8 lol8 lol8 lol8 lol8 lol8 lol8; lol9 What does this expression do?</description></item><item><title>Comparison with other projects</title><link>https://next.pomsky-lang.org/docs/reference/comparison/</link><pubDate>Sun, 10 Jul 2022 16:21:58 +0000</pubDate><guid>https://next.pomsky-lang.org/docs/reference/comparison/</guid><description>This wiki has a list of projects with similar goals to Pomsky. Here&amp;rsquo;s a list of the most popular projects:
⚠️ Disclaimer that as the maintainer of Pomsky, I am obviously biased. If you find any incorrect or misleading information, please open an issue. Project Types GitHub Melody Transpiled Pomsky Transpiled Egg Expressions Transpiled
App: Oil shell Rx Expressions Transpiled
App: Emacs Raku Grammars App: Raku Rosie App: Rosie SRL DSL: PHP Super Expressive DSL: JS Verbal Expressions DSL: JS Swift RegexBuilder DSL: Swift Since this content is likely to get out of date, I encourage you to update it.</description></item></channel></rss>